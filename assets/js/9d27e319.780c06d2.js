"use strict";(self.webpackChunkbraindance_docs=self.webpackChunkbraindance_docs||[]).push([[143],{196:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var s=t(4848),c=t(8453);const r={},i="module spikedetector.py",o={id:"docs/spikedetector.py",title:"spikedetector.py",description:"Global Variables",source:"@site/docs/docs/spikedetector.py.mdx",sourceDirName:"docs",slug:"/docs/spikedetector.py",permalink:"/brainloop/docs/docs/spikedetector.py",draft:!1,unlisted:!1,editUrl:"https://github.com/braingeneers/brainloop/docs/docs/spikedetector.py.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"select_electrodes.py",permalink:"/brainloop/docs/docs/select_electrodes.py"},next:{title:"train.py",permalink:"/brainloop/docs/docs/train.py"}},a={},d=[{value:"<strong>Global Variables</strong>",id:"global-variables",level:2},{value:"<kbd>class</kbd> <code>SpikeDetector</code>",id:"class-spikedetector",level:2},{value:"<kbd>function</kbd> <code>__init__</code>",id:"function-__init__",level:3},{value:"<kbd>function</kbd> <code>detect</code>",id:"function-detect",level:3},{value:"<kbd>function</kbd> <code>detect_chunk</code>",id:"function-detect_chunk",level:3},{value:"<kbd>function</kbd> <code>reset</code>",id:"function-reset",level:3}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/spikedetector/spikedetector.py#L0",children:(0,s.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,s.jsx)(n.header,{children:(0,s.jsxs)(n.h1,{id:"module-spikedetectorpy",children:[(0,s.jsx)("kbd",{children:"module"})," ",(0,s.jsx)(n.code,{children:"spikedetector.py"})]})}),"\n",(0,s.jsx)(n.h2,{id:"global-variables",children:(0,s.jsx)(n.strong,{children:"Global Variables"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"model_path"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"map_location"})}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"class-spikedetector",children:[(0,s.jsx)("kbd",{children:"class"})," ",(0,s.jsx)(n.code,{children:"SpikeDetector"})]}),"\n",(0,s.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/spikedetector/spikedetector.py#L18",children:(0,s.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,s.jsxs)(n.h3,{id:"function-__init__",children:[(0,s.jsx)("kbd",{children:"function"})," ",(0,s.jsx)(n.code,{children:"__init__"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"__init__(model_path, n_channels=256, n_frames=200, device='cuda')\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/spikedetector/spikedetector.py#L28",children:(0,s.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,s.jsxs)(n.h3,{id:"function-detect",children:[(0,s.jsx)("kbd",{children:"function"})," ",(0,s.jsx)(n.code,{children:"detect"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"detect(data_frame)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Takes in the current frame of data, adds it to the data slice, and returns the spike predictions"}),"\n",(0,s.jsx)(n.p,{children:"Parameters\n----------  data_frame : np.array of shape (n_channels, 1)  The current frame of data Returns\n-------  spike_preds : np.array of shape (n_channels, 120)  The spike predictions for each channel, for the   previous 6ms, or 120 frames"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/spikedetector/spikedetector.py#L63",children:(0,s.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,s.jsxs)(n.h3,{id:"function-detect_chunk",children:[(0,s.jsx)("kbd",{children:"function"})," ",(0,s.jsx)(n.code,{children:"detect_chunk"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"detect_chunk(data_chunk)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Takes in a chunk of data, and returns the spike predictions for each channel for the last 6ms of data"}),"\n",(0,s.jsx)(n.p,{children:"Parameters\n----------  data_chunk : np.array of shape (n_channels, n_frames)  The chunk of data to be processed Returns\n-------  spike_preds : np.array of shape (n_channels, 120)  The spike predictions for each channel, for the  previous 6ms, or 120 frames"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/spikedetector/spikedetector.py#L104",children:(0,s.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,s.jsxs)(n.h3,{id:"function-reset",children:[(0,s.jsx)("kbd",{children:"function"})," ",(0,s.jsx)(n.code,{children:"reset"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"reset()\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.em,{children:["This file was automatically generated via ",(0,s.jsx)(n.a,{href:"https://github.com/ml-tooling/lazydocs",children:"lazydocs"}),"."]})})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var s=t(6540);const c={},r=s.createContext(c);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);