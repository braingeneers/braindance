"use strict";(self.webpackChunkbraindance_docs=self.webpackChunkbraindance_docs||[]).push([[587],{2330:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=s(4848),t=s(8453);const i={},a="module dummy_zmq_np.py",l={id:"docs/dummy_zmq_np.py",title:"dummy_zmq_np.py",description:"ZMQ Publisher for streaming simulated or real neural data.",source:"@site/docs/docs/dummy_zmq_np.py.mdx",sourceDirName:"docs",slug:"/docs/dummy_zmq_np.py",permalink:"/BrainLoop/docs/docs/dummy_zmq_np.py",draft:!1,unlisted:!1,editUrl:"https://github.com/braingeneers/brainloop/docs/docs/dummy_zmq_np.py.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"dummy_maxlab.py",permalink:"/BrainLoop/docs/docs/dummy_maxlab.py"},next:{title:"maxwell_env.py",permalink:"/BrainLoop/docs/docs/maxwell_env.py"}},d={},c=[{value:"<kbd>function</kbd> <code>get_sine_wave</code>",id:"function-get_sine_wave",level:2},{value:"<kbd>function</kbd> <code>run</code>",id:"function-run",level:2}];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/dummy_zmq_np.py#L0",children:(0,r.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,r.jsx)(n.header,{children:(0,r.jsxs)(n.h1,{id:"module-dummy_zmq_nppy",children:[(0,r.jsx)("kbd",{children:"module"})," ",(0,r.jsx)(n.code,{children:"dummy_zmq_np.py"})]})}),"\n",(0,r.jsx)(n.p,{children:"ZMQ Publisher for streaming simulated or real neural data."}),"\n",(0,r.jsx)(n.p,{children:"This script sets up ZMQ publishers to stream neural data and spike events. It can generate sine wave data, use manually created data, or load data from files."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/dummy_zmq_np.py#L18",children:(0,r.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,r.jsxs)(n.h2,{id:"function-get_sine_wave",children:[(0,r.jsx)("kbd",{children:"function"})," ",(0,r.jsx)(n.code,{children:"get_sine_wave"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"get_sine_wave(n_channels=1024, fs=20000, total_time_steps=600000)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Generate a sine wave dataset."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Args:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(n.code,{children:"n_channels"})})," (int):  Number of channels. Default is 1024."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(n.code,{children:"fs"})})," (int):  Sampling frequency in Hz. Default is 20000."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(n.code,{children:"total_time_steps"})})," (int):  Total number of time steps. Default is 20000*30 (30 seconds)."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(n.code,{children:"numpy.ndarray"})}),":  2D array of sine wave data with shape (n_channels, total_time_steps)."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/dummy_zmq_np.py#L41",children:(0,r.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,r.jsxs)(n.h2,{id:"function-run",children:[(0,r.jsx)("kbd",{children:"function"})," ",(0,r.jsx)(n.code,{children:"run"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"run(data_path, random_events=True)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Run the ZMQ publisher to stream neural data and spike events."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Args:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(n.code,{children:"data_path"})})," (str):  Path to the data file or 'sine' for generated sine wave or 'manual' for manually created data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(n.code,{children:"random_events"})})," (bool):  Whether to generate random spike events. Default is True."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Raises:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(n.code,{children:"NotImplementedError"})}),":  If the data file type is not supported."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["This file was automatically generated via ",(0,r.jsx)(n.a,{href:"https://github.com/ml-tooling/lazydocs",children:"lazydocs"}),"."]})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var r=s(6540);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);