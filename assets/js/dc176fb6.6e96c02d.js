"use strict";(self.webpackChunkbraindance_docs=self.webpackChunkbraindance_docs||[]).push([[128],{1859:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var s=r(4848),i=r(8453);const o={sidebar_position:5},t="API Reference",d={id:"RT-sort/api-reference",title:"API Reference",description:"This page provides a detailed reference for the main classes and functions in RT-Sort.",source:"@site/docs/RT-sort/api-reference.md",sourceDirName:"RT-sort",slug:"/RT-sort/api-reference",permalink:"/brainloop/docs/RT-sort/api-reference",draft:!1,unlisted:!1,editUrl:"https://github.com/braingeneers/brainloop/docs/RT-sort/api-reference.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Training Your Own Detection Models",permalink:"/brainloop/docs/RT-sort/usage/training-models"},next:{title:"Documentation",permalink:"/brainloop/docs/category/documentation"}},l={},c=[{value:"ModelSpikeSorter",id:"modelspikesorter",level:2},{value:"<code>ModelSpikeSorter.load(detection_model_path)</code>",id:"modelspikesorterloaddetection_model_path",level:3},{value:"Sequence Detection",id:"sequence-detection",level:2},{value:"<code>detect_sequences(recording, inter_path, detection_model, **kwargs)</code>",id:"detect_sequencesrecording-inter_path-detection_model-kwargs",level:3},{value:"RTSort",id:"rtsort",level:2},{value:"<code>reset()</code>",id:"reset",level:3},{value:"<code>running_sort(obs)</code>",id:"running_sortobs",level:3},{value:"Training",id:"training",level:2},{value:"<code>train_detection_model(recordings, **kwargs)</code>",id:"train_detection_modelrecordings-kwargs",level:3},{value:"Kilosort2 Integration",id:"kilosort2-integration",level:2},{value:"<code>run_kilosort2(recording_files, **kwargs)</code>",id:"run_kilosort2recording_files-kwargs",level:3},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Offline Sequence Detection",id:"offline-sequence-detection",level:3},{value:"Online Sorting",id:"online-sorting",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"api-reference",children:"API Reference"})}),"\n",(0,s.jsx)(n.p,{children:"This page provides a detailed reference for the main classes and functions in RT-Sort."}),"\n",(0,s.jsx)(n.h2,{id:"modelspikesorter",children:"ModelSpikeSorter"}),"\n",(0,s.jsx)(n.h3,{id:"modelspikesorterloaddetection_model_path",children:(0,s.jsx)(n.code,{children:"ModelSpikeSorter.load(detection_model_path)"})}),"\n",(0,s.jsx)(n.p,{children:"Loads a pre-trained detection model."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"detection_model_path"}),": Path to a folder containing a ModelSpikeSorter object's files."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns:"})," ModelSpikeSorter object"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"sequence-detection",children:"Sequence Detection"}),"\n",(0,s.jsx)(n.h3,{id:"detect_sequencesrecording-inter_path-detection_model-kwargs",children:(0,s.jsx)(n.code,{children:"detect_sequences(recording, inter_path, detection_model, **kwargs)"})}),"\n",(0,s.jsx)(n.p,{children:"Detects sequences in a recording."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"recording"}),": Recording loaded with SpikeInterface or path to a saved recording."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"inter_path"}),": Path to a folder for intermediate cached data."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"detection_model"}),": ModelSpikeSorter object or path to its folder."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"**kwargs"}),": Additional optional parameters.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"recording_window_ms"}),": Tuple (start_ms, end_ms) for section of recording to process. Default is None (entire duration)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"delete_inter"}),": Whether to delete the intermediate directory. Default is False."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"verbose"}),": Whether to print progress. Default is True."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"num_processes"}),": Number of CPU processes to use. Default is None (uses all available)."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns:"})," RTSort object or NumPy array of spike trains."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"rtsort",children:"RTSort"}),"\n",(0,s.jsx)(n.h3,{id:"reset",children:(0,s.jsx)(n.code,{children:"reset()"})}),"\n",(0,s.jsx)(n.p,{children:"Resets the RTSort object for online use."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Parameters:"})," None"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns:"})," None"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"running_sortobs",children:(0,s.jsx)(n.code,{children:"running_sort(obs)"})}),"\n",(0,s.jsx)(n.p,{children:"Sorts a stream of data in real-time."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"obs"}),": NumPy array with shape (num_frames, num_electrodes)."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns:"})," List of tuples containing sorted spike data."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"training",children:"Training"}),"\n",(0,s.jsx)(n.h3,{id:"train_detection_modelrecordings-kwargs",children:(0,s.jsx)(n.code,{children:"train_detection_model(recordings, **kwargs)"})}),"\n",(0,s.jsx)(n.p,{children:"Trains a new detection model."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"recordings"}),": List of recordings for training."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"**kwargs"}),": Additional optional parameters.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"kilosort_path"}),": Folder where Kilosort2 is installed. Default is None."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"input_scale"}),": Multiplier for recording traces. Default is 0.01."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"learning_rate"}),": Learning rate for training. Default is 7.76e-4."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"validation_recording"}),": Recording to use as validation. Default is None."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns:"})," ModelSpikeSorter object"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"kilosort2-integration",children:"Kilosort2 Integration"}),"\n",(0,s.jsx)(n.h3,{id:"run_kilosort2recording_files-kwargs",children:(0,s.jsx)(n.code,{children:"run_kilosort2(recording_files, **kwargs)"})}),"\n",(0,s.jsx)(n.p,{children:"Runs Kilosort2 on a set of recordings."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Parameters:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"recording_files"}),": List of recordings to spike sort."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"**kwargs"}),": Additional optional parameters.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"kilosort_path"}),": Folder where Kilosort2 is installed."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"results_folders"}),": List of folders to store sorted results. Default is None."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"compile_to_npz"}),': Whether to save results as "sorted.npz". Default is True.']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"compile_to_mat"}),': Whether to save results as "sorted.mat". Default is False.']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"intermediate_folders"}),": List of folders for intermediate results. Default is None."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"delete_inter"}),": Whether to delete intermediate folders after sorting. Default is True."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns:"})," None (results are saved to files)"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,s.jsx)(n.h3,{id:"offline-sequence-detection",children:"Offline Sequence Detection"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"rt_sort = detect_sequences(recording, inter_path, detection_model, recording_window_ms=(0, 5*60*1000))\nsequence_spike_trains = rt_sort.sort_offline(recording, inter_path, recording_window_ms=(5*60*1000, 10*60*1000), verbose=True)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"online-sorting",children:"Online Sorting"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"rt_sort.reset()\nwhile not done:\n    obs, done = env.step()\n    sequence_detections = rt_sort.running_sort(obs)\n    # Process sequence_detections\n"})}),"\n",(0,s.jsx)(n.p,{children:"For more detailed information on each function and its parameters, please refer to the respective sections in the user manual."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>d});var s=r(6540);const i={},o=s.createContext(i);function t(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);