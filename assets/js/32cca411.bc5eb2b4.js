"use strict";(self.webpackChunkbraindance_docs=self.webpackChunkbraindance_docs||[]).push([[815],{5398:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>r});var t=n(4848),l=n(8453);const i={},s="module data_loader.py",o={id:"docs/data_loader.py",title:"data_loader.py",description:"---",source:"@site/docs/docs/data_loader.py.mdx",sourceDirName:"docs",slug:"/docs/data_loader.py",permalink:"/BrainLoop/docs/docs/data_loader.py",draft:!1,unlisted:!1,editUrl:"https://github.com/braingeneers/brainloop/docs/docs/data_loader.py.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"base_env.py",permalink:"/BrainLoop/docs/docs/base_env.py"},next:{title:"dummy_maxlab.py",permalink:"/BrainLoop/docs/docs/dummy_maxlab.py"}},d={},r=[{value:"<kbd>function</kbd> <code>load_info_maxwell</code>",id:"function-load_info_maxwell",level:2},{value:"<kbd>function</kbd> <code>load_mapping_maxwell</code>",id:"function-load_mapping_maxwell",level:2},{value:"<kbd>function</kbd> <code>load_data_maxwell</code>",id:"function-load_data_maxwell",level:2},{value:"<kbd>function</kbd> <code>convert_uint16_maxwell</code>",id:"function-convert_uint16_maxwell",level:2},{value:"<kbd>function</kbd> <code>load_windows_maxwell</code>",id:"function-load_windows_maxwell",level:2},{value:"<kbd>function</kbd> <code>load_stim_log</code>",id:"function-load_stim_log",level:2},{value:"<kbd>function</kbd> <code>apply_literal_eval_stim_log</code>",id:"function-apply_literal_eval_stim_log",level:2},{value:"<kbd>function</kbd> <code>get_stim_electrodes</code>",id:"function-get_stim_electrodes",level:2},{value:"<kbd>function</kbd> <code>load_windows</code>",id:"function-load_windows",level:2}];function c(e){const a={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/analysis/data_loader.py#L0",children:(0,t.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,t.jsx)(a.header,{children:(0,t.jsxs)(a.h1,{id:"module-data_loaderpy",children:[(0,t.jsx)("kbd",{children:"module"})," ",(0,t.jsx)(a.code,{children:"data_loader.py"})]})}),"\n",(0,t.jsx)(a.hr,{}),"\n",(0,t.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/analysis/data_loader.py#L9",children:(0,t.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,t.jsxs)(a.h2,{id:"function-load_info_maxwell",children:[(0,t.jsx)("kbd",{children:"function"})," ",(0,t.jsx)(a.code,{children:"load_info_maxwell"})]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:"load_info_maxwell(filepath)\n"})}),"\n",(0,t.jsx)(a.p,{children:"Loads metadata from a maxwell file"}),"\n",(0,t.jsx)(a.p,{children:"Parameters\n---------- filepath : str  path to maxwell file"}),"\n",(0,t.jsx)(a.p,{children:"Returns\n------- metadata : dict  metadata dictionary"}),"\n",(0,t.jsx)(a.hr,{}),"\n",(0,t.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/analysis/data_loader.py#L49",children:(0,t.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,t.jsxs)(a.h2,{id:"function-load_mapping_maxwell",children:[(0,t.jsx)("kbd",{children:"function"})," ",(0,t.jsx)(a.code,{children:"load_mapping_maxwell"})]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:"load_mapping_maxwell(filepath, channels=None)\n"})}),"\n",(0,t.jsx)(a.p,{children:"Loads mapping from a maxwell file"}),"\n",(0,t.jsx)(a.p,{children:"Parameters\n---------- filepath : str  path to maxwell file channels : list of int  channels of interest"}),"\n",(0,t.jsx)(a.p,{children:"Returns\n------- mapping : dict  mapping dictionary"}),"\n",(0,t.jsx)(a.hr,{}),"\n",(0,t.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/analysis/data_loader.py#L93",children:(0,t.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,t.jsxs)(a.h2,{id:"function-load_data_maxwell",children:[(0,t.jsx)("kbd",{children:"function"})," ",(0,t.jsx)(a.code,{children:"load_data_maxwell"})]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:"load_data_maxwell(\n    filepath,\n    channels=None,\n    start=0,\n    length=-1,\n    spikes=False,\n    dtype=<class 'numpy.float32'>,\n    suffix=None,\n    verbose=False\n)\n"})}),"\n",(0,t.jsxs)(a.p,{children:["Loads specified amount of data from a maxwell file ",":param"," filepath:   Path to filename.raw.h5 file ",":param"," channels: list of int  Channels of interest ",":param"," start: int  Starting frame (offset) of the datapoints to use ",":param"," length: int  Length of datapoints to take ",":param"," spikes: bool  Whether to only thresholded spikes or raw data ",":param"," dtype: np.dtype  Data type to load ",":param"," suffix: str  Suffix to add to filepath ",":param"," verbose: bool  Whether to print errors"]}),"\n",(0,t.jsx)(a.p,{children:":return: dataset: nparray  Dataset of datapoints."}),"\n",(0,t.jsx)(a.hr,{}),"\n",(0,t.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/analysis/data_loader.py#L215",children:(0,t.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,t.jsxs)(a.h2,{id:"function-convert_uint16_maxwell",children:[(0,t.jsx)("kbd",{children:"function"})," ",(0,t.jsx)(a.code,{children:"convert_uint16_maxwell"})]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:"convert_uint16_maxwell(data)\n"})}),"\n",(0,t.jsxs)(a.p,{children:["Converts uint16 data to float32 ",":param"," data: nparray  Data to convert :return: data: nparray  Converted data"]}),"\n",(0,t.jsx)(a.hr,{}),"\n",(0,t.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/analysis/data_loader.py#L231",children:(0,t.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,t.jsxs)(a.h2,{id:"function-load_windows_maxwell",children:[(0,t.jsx)("kbd",{children:"function"})," ",(0,t.jsx)(a.code,{children:"load_windows_maxwell"})]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:"load_windows_maxwell(filepath, starts, window_sz=2000, channels=None)\n"})}),"\n",(0,t.jsxs)(a.p,{children:["Loads a fixed window size from the list of starts ",":param"," filepath:   Path to filename.raw.h5 file ",":param"," starts: list of int  List of start frames ",":param"," window_sz: int  Window size in frames ",":param"," channels: list of int"]}),"\n",(0,t.jsx)(a.p,{children:":return: dataset: nparray  Dataset of datapoints."}),"\n",(0,t.jsx)(a.hr,{}),"\n",(0,t.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/analysis/data_loader.py#L263",children:(0,t.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,t.jsxs)(a.h2,{id:"function-load_stim_log",children:[(0,t.jsx)("kbd",{children:"function"})," ",(0,t.jsx)(a.code,{children:"load_stim_log"})]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:"load_stim_log(filepath, adjust=False, suffix='_log.csv')\n"})}),"\n",(0,t.jsx)(a.hr,{}),"\n",(0,t.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/analysis/data_loader.py#L288",children:(0,t.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,t.jsxs)(a.h2,{id:"function-apply_literal_eval_stim_log",children:[(0,t.jsx)("kbd",{children:"function"})," ",(0,t.jsx)(a.code,{children:"apply_literal_eval_stim_log"})]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:"apply_literal_eval_stim_log(stim_log)\n"})}),"\n",(0,t.jsx)(a.p,{children:"Applies ast.literal_eval to the stim electrodes and stim pattern columns of the stim log needed because the columns are read as strings"}),"\n",(0,t.jsx)(a.hr,{}),"\n",(0,t.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/analysis/data_loader.py#L297",children:(0,t.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,t.jsxs)(a.h2,{id:"function-get_stim_electrodes",children:[(0,t.jsx)("kbd",{children:"function"})," ",(0,t.jsx)(a.code,{children:"get_stim_electrodes"})]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:"get_stim_electrodes(stim_log)\n"})}),"\n",(0,t.jsx)(a.p,{children:"Get the unique stim electrodes from the stim log"}),"\n",(0,t.jsx)(a.hr,{}),"\n",(0,t.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/analysis/data_loader.py#L308",children:(0,t.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,t.jsxs)(a.h2,{id:"function-load_windows",children:[(0,t.jsx)("kbd",{children:"function"})," ",(0,t.jsx)(a.code,{children:"load_windows"})]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-python",children:"load_windows(\n    metadata,\n    exp,\n    window_centers,\n    window_sz,\n    dtype=<class 'numpy.float16'>,\n    channels=None\n)\n"})}),"\n",(0,t.jsx)(a.p,{children:"Loads a window of data from an experiment window is in frames Parameters\n---------- metadata : dict  metadata dictionary exp : str  experiment name window_centers : list  list of window centers in frames window_sz : int  window size in frames dtype : np.dtype  data type to load"}),"\n",(0,t.jsx)(a.p,{children:"Returns\n------- data : np.array (n_windows, n_channels, window_sz)"}),"\n",(0,t.jsx)(a.hr,{}),"\n",(0,t.jsx)(a.p,{children:(0,t.jsxs)(a.em,{children:["This file was automatically generated via ",(0,t.jsx)(a.a,{href:"https://github.com/ml-tooling/lazydocs",children:"lazydocs"}),"."]})})]})}function h(e={}){const{wrapper:a}={...(0,l.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>s,x:()=>o});var t=n(6540);const l={},i=t.createContext(l);function s(e){const a=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),t.createElement(i.Provider,{value:a},e.children)}}}]);