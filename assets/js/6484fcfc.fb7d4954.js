"use strict";(self.webpackChunkbraindance_docs=self.webpackChunkbraindance_docs||[]).push([[925],{2949:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>c});var n=o(4848),r=o(8453);const d={sidebar_position:1},i="Loading Detection Models",s={id:"RT-sort/usage/load-detection-model",title:"Loading Detection Models",description:"To use RT-Sort, you first need to load a detection model. Here's how to do it:",source:"@site/docs/RT-sort/usage/load-detection-model.md",sourceDirName:"RT-sort/usage",slug:"/RT-sort/usage/load-detection-model",permalink:"/BrainLoop/docs/RT-sort/usage/load-detection-model",draft:!1,unlisted:!1,editUrl:"https://github.com/braingeneers/brainloop/docs/RT-sort/usage/load-detection-model.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"usage",permalink:"/BrainLoop/docs/category/usage"},next:{title:"Sequence Detection (Offline Use)",permalink:"/BrainLoop/docs/RT-sort/usage/sequence-detection"}},a={},c=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Pre-trained Models",id:"pre-trained-models",level:2},{value:"Next Steps",id:"next-steps",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"loading-detection-models",children:"Loading Detection Models"})}),"\n",(0,n.jsx)(t.p,{children:"To use RT-Sort, you first need to load a detection model. Here's how to do it:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"from braindance.core.spikedetector.model2 import ModelSpikeSorter\n\ndetection_model = ModelSpikeSorter.load(detection_model_path)\n"})}),"\n",(0,n.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"detection_model_path"}),": Path to a folder containing a ModelSpikeSorter object's ",(0,n.jsx)(t.code,{children:"init_dict.json"})," and ",(0,n.jsx)(t.code,{children:"state_dict.pt"}),"."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"ModelSpikeSorter"}),": Represents the loaded detection model."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"pre-trained-models",children:"Pre-trained Models"}),"\n",(0,n.jsx)(t.p,{children:"Pre-trained ModelSpikeSorter objects for Maxwell MEAs and Neuropixels used in the RT-Sort manuscript can be found in the BrainDance GitHub repository:"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"BrainDance/braindance/core/spikedetector/detection_models"})}),"\n",(0,n.jsx)(t.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,n.jsxs)(t.p,{children:["Once you've loaded a detection model, you can proceed to ",(0,n.jsx)(t.a,{href:"sequence-detection",children:"sequence detection"})," or ",(0,n.jsx)(t.a,{href:"real-time-application",children:"real-time application"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>s});var n=o(6540);const r={},d=n.createContext(r);function i(e){const t=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(d.Provider,{value:t},e.children)}}}]);