"use strict";(self.webpackChunkbraindance_docs=self.webpackChunkbraindance_docs||[]).push([[736],{1105:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>d});var r=i(4848),s=i(8453);const c={},a="module artifact_removal.py",t={id:"docs/artifact_removal.py",title:"artifact_removal.py",description:"Global Variables",source:"@site/docs/docs/artifact_removal.py.mdx",sourceDirName:"docs",slug:"/docs/artifact_removal.py",permalink:"/brainloop/docs/docs/artifact_removal.py",draft:!1,unlisted:!1,editUrl:"https://github.com/braingeneers/brainloop/docs/docs/artifact_removal.py.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Documentation",permalink:"/brainloop/docs/category/documentation"},next:{title:"base_env.py",permalink:"/brainloop/docs/docs/base_env.py"}},l={},d=[{value:"<strong>Global Variables</strong>",id:"global-variables",level:2},{value:"<kbd>function</kbd> <code>docstring_wrapper</code>",id:"function-docstring_wrapper",level:2},{value:"<kbd>function</kbd> <code>cubic_fit5</code>",id:"function-cubic_fit5",level:2},{value:"<kbd>function</kbd> <code>mean_numba</code>",id:"function-mean_numba",level:2},{value:"<kbd>function</kbd> <code>cubic_fit2d</code>",id:"function-cubic_fit2d",level:2},{value:"<kbd>function</kbd> <code>fast_factorial</code>",id:"function-fast_factorial",level:2},{value:"<kbd>function</kbd> <code>fast_median</code>",id:"function-fast_median",level:2},{value:"<kbd>function</kbd> <code>fast_mmean</code>",id:"function-fast_mmean",level:2},{value:"<kbd>class</kbd> <code>ArtifactRemoval</code>",id:"class-artifactremoval",level:2},{value:"<kbd>function</kbd> <code>__init__</code>",id:"function-__init__",level:3},{value:"<kbd>handler</kbd> shift_ind",id:"handler-shift_ind",level:4},{value:"<kbd>function</kbd> <code>fit</code>",id:"function-fit",level:3},{value:"<kbd>function</kbd> <code>fit_step</code>",id:"function-fit_step",level:3},{value:"<kbd>function</kbd> <code>run</code>",id:"function-run",level:3}];function o(n){const e={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/artifact_removal.py#L0",children:(0,r.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,r.jsx)(e.header,{children:(0,r.jsxs)(e.h1,{id:"module-artifact_removalpy",children:[(0,r.jsx)("kbd",{children:"module"})," ",(0,r.jsx)(e.code,{children:"artifact_removal.py"})]})}),"\n",(0,r.jsx)(e.h2,{id:"global-variables",children:(0,r.jsx)(e.strong,{children:"Global Variables"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.strong,{children:"LOOKUP_TABLE"})}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/artifact_removal.py#L5",children:(0,r.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,r.jsxs)(e.h2,{id:"function-docstring_wrapper",children:[(0,r.jsx)("kbd",{children:"function"})," ",(0,r.jsx)(e.code,{children:"docstring_wrapper"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"docstring_wrapper(func)\n"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/artifact_removal.py#L11",children:(0,r.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,r.jsxs)(e.h2,{id:"function-cubic_fit5",children:[(0,r.jsx)("kbd",{children:"function"})," ",(0,r.jsx)(e.code,{children:"cubic_fit5"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"cubic_fit5(\n    v,\n    N=60,\n    nc_start=60,\n    mean_arr=None,\n    mean_std=None,\n    artifact_width=50,\n    remove_frames_before=8\n)\n"})}),"\n",(0,r.jsx)(e.p,{children:"Perform cubic fitting on the input data."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Args:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"v"})})," (numpy.ndarray):  Input data array."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"N"})})," (int):  Window size for fitting. Default is 60."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"nc_start"})})," (int):  Starting point for fitting. Default is 60."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"mean_arr"})})," (numpy.ndarray, optional):  Array of mean values. Default is None."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"mean_std"})})," (float, optional):  Standard deviation of mean values. Default is None."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"artifact_width"})})," (int):  Width of artifact to remove. Default is 50."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"remove_frames_before"})})," (int):  Number of frames to remove before artifact. Default is 8."]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"tuple"})}),":  A tuple containing:","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"v_cleaned (numpy.ndarray): Cleaned data array."}),"\n",(0,r.jsx)(e.li,{children:"art (numpy.ndarray): Artifact array."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/artifact_removal.py#L33",children:(0,r.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,r.jsxs)(e.h2,{id:"function-mean_numba",children:[(0,r.jsx)("kbd",{children:"function"})," ",(0,r.jsx)(e.code,{children:"mean_numba"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"mean_numba(a)\n"})}),"\n",(0,r.jsx)(e.p,{children:"Compute mean of 2D array along axis 0 using Numba."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Args:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"a"})})," (numpy.ndarray):  Input 2D array."]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"numpy.ndarray"})}),":  Array of mean values."]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/artifact_removal.py#L51",children:(0,r.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,r.jsxs)(e.h2,{id:"function-cubic_fit2d",children:[(0,r.jsx)("kbd",{children:"function"})," ",(0,r.jsx)(e.code,{children:"cubic_fit2d"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"cubic_fit2d(\n    data,\n    N=60,\n    nc_start=60,\n    return_artifacts=False,\n    artifact_width=50,\n    remove_frames_before=8,\n    n_stds=2\n)\n"})}),"\n",(0,r.jsx)(e.p,{children:"Perform 2D cubic fitting on the input data."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Args:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"data"})})," (numpy.ndarray):  Input 2D data array."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"N"})})," (int):  Window size for fitting. Default is 60."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"nc_start"})})," (int):  Starting point for fitting. Default is 60."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"return_artifacts"})})," (bool):  Whether to return artifacts. Default is False."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"artifact_width"})})," (int):  Width of artifact to remove. Default is 50."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"remove_frames_before"})})," (int):  Number of frames to remove before artifact. Default is 8."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"n_stds"})})," (int):  Number of standard deviations for threshold. Default is 2."]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"tuple"})}),":  A tuple containing:","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"v_cleaned (numpy.ndarray): Cleaned 2D data array."}),"\n",(0,r.jsx)(e.li,{children:"art (numpy.ndarray or None): Artifact 2D array if return_artifacts is True, else None."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/artifact_removal.py#L81",children:(0,r.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,r.jsxs)(e.h2,{id:"function-fast_factorial",children:[(0,r.jsx)("kbd",{children:"function"})," ",(0,r.jsx)(e.code,{children:"fast_factorial"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"fast_factorial(n)\n"})}),"\n",(0,r.jsx)(e.p,{children:"Compute factorial using a lookup table for faster computation."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Args:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"n"})})," (int):  Input number."]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"int"})}),":  Factorial of n."]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Raises:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"ValueError"})}),":  If n is greater than 20."]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/artifact_removal.py#L100",children:(0,r.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,r.jsxs)(e.h2,{id:"function-fast_median",children:[(0,r.jsx)("kbd",{children:"function"})," ",(0,r.jsx)(e.code,{children:"fast_median"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"fast_median(a)\n"})}),"\n",(0,r.jsx)(e.p,{children:"Compute median of an array using Numba for faster computation."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Args:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"a"})})," (numpy.ndarray):  Input array."]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"float"})}),":  Median of the input array."]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/artifact_removal.py#L114",children:(0,r.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,r.jsxs)(e.h2,{id:"function-fast_mmean",children:[(0,r.jsx)("kbd",{children:"function"})," ",(0,r.jsx)(e.code,{children:"fast_mmean"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"fast_mmean(q, frame)\n"})}),"\n",(0,r.jsx)(e.p,{children:"Compute moving mean."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Args:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"q"})})," (float):  Current moving mean."]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"frame"})})," (float):  New value."]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Returns:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)("b",{children:(0,r.jsx)(e.code,{children:"float"})}),":  Updated moving mean."]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsxs)(e.h2,{id:"class-artifactremoval",children:[(0,r.jsx)("kbd",{children:"class"})," ",(0,r.jsx)(e.code,{children:"ArtifactRemoval"})]}),"\n",(0,r.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/artifact_removal.py#L136",children:(0,r.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,r.jsxs)(e.h3,{id:"function-__init__",children:[(0,r.jsx)("kbd",{children:"function"})," ",(0,r.jsx)(e.code,{children:"__init__"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"__init__(N, nc_start=0, min_val=-100, max_val=100, spike_thresh=[-3.5, -20])\n"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsxs)(e.h4,{id:"handler-shift_ind",children:[(0,r.jsx)("kbd",{children:"handler"})," shift_ind"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/artifact_removal.py#L233",children:(0,r.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,r.jsxs)(e.h3,{id:"function-fit",children:[(0,r.jsx)("kbd",{children:"function"})," ",(0,r.jsx)(e.code,{children:"fit"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"fit(v, T, S)\n"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/artifact_removal.py#L269",children:(0,r.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,r.jsxs)(e.h3,{id:"function-fit_step",children:[(0,r.jsx)("kbd",{children:"function"})," ",(0,r.jsx)(e.code,{children:"fit_step"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"fit_step(frame)\n"})}),"\n",(0,r.jsx)(e.p,{children:"Recursively computes the new W then solves for the artifact of the center frame when the new frame is added"}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)("a",{href:"https://github.com/braingeneers/brainloop/blob/main/brainloop/core/artifact_removal.py#L358",children:(0,r.jsx)("img",{align:"right",style:{float:"right"},src:"https://img.shields.io/badge/-source-cccccc?style=flat-square"})}),"\n",(0,r.jsxs)(e.h3,{id:"function-run",children:[(0,r.jsx)("kbd",{children:"function"})," ",(0,r.jsx)(e.code,{children:"run"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"run(\n    data,\n    return_artifacts=False,\n    return_spikes=False,\n    progress_bar=False,\n    n_workers=1\n)\n"})}),"\n",(0,r.jsx)(e.p,{children:"Runs the process for the whole data input. If data is a 1D array, it will return the cleaned data If data is a 2D array, it will run for each row"}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsxs)(e.em,{children:["This file was automatically generated via ",(0,r.jsx)(e.a,{href:"https://github.com/ml-tooling/lazydocs",children:"lazydocs"}),"."]})})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(o,{...n})}):o(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>a,x:()=>t});var r=i(6540);const s={},c=r.createContext(s);function a(n){const e=r.useContext(c);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),r.createElement(c.Provider,{value:e},n.children)}}}]);